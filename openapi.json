{
  "openapi": "3.0.0",
  "info": {
    "title": "Delphi",
    "description": "Delphi",
    "version": "0.0.2"
  },
  "tags": [
    {
      "name": "delphi",
      "description": "Delphi"
    }
  ],
  "components": {
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      },
      "clientId": {
        "type": "apiKey",
        "in": "header",
        "name": "X-CLIENT-ID"
      },
      "publicToken": {
        "type": "apiKey",
        "in": "header",
        "name": "X-PUBLIC-TOKEN"
      }
    },
    "schemas": {
      "CubeField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": ["name", "title", "type"]
      },
      "CubeCube": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "measures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CubeField"
            }
          },
          "dimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CubeField"
            }
          }
        },
        "required": ["name", "title", "measures", "dimensions"]
      },
      "CoordinatorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "plan",
              "searchDashboards",
              "searchCompatibleFields",
              "catalog",
              "values",
              "query",
              "edit",
              "answer",
              "chart",
              "message",
              "sql",
              "error"
            ]
          },
          "response": {
            "type": "string"
          },
          "catalog": {
            "type": "object",
            "properties": {
              "dimensions": {
                "type": "object"
              },
              "metrics": {
                "type": "object"
              },
              "cubes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CubeCube"
                }
              }
            }
          },
          "question": {
            "type": "string"
          },
          "query": {
            "type": "object"
          },
          "table": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "plan": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "chart": {
            "type": "object",
            "properties": {
              "dataName": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": ["area", "bar", "bar_list", "donut", "line", "table"]
              },
              "measures": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "dimension": {
                "type": "string"
              },
              "pivot": {
                "type": "string"
              },
              "dimensions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "stacked": {
                "type": "boolean"
              }
            },
            "required": ["dataName", "type", "measures"]
          },
          "chartType": {
            "type": "string",
            "enum": ["area", "bar", "bar_list", "donut", "line", "table"]
          },
          "sql": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "conversation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "author": {
                  "type": "string",
                  "enum": ["delphi", "user", "function"]
                },
                "text": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "colors": {
                  "type": "object",
                  "properties": {
                    "primary": {
                      "type": "string"
                    },
                    "secondary": {
                      "type": "string"
                    }
                  }
                },
                "conversationId": {
                  "type": "string"
                },
                "userId": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": ["type", "response"]
      }
    }
  },
  "security": [
    {
      "apiKey": [],
      "clientId": []
    }
  ],
  "paths": {
    "/delphi/filter-fields": {
      "post": {
        "tags": ["delphi"],
        "summary": "Filter fields",
        "description": "Filter fields",
        "operationId": "filterFields",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Filter fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "answer": {
                          "type": "object",
                          "properties": {
                            "fields": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/CubeField"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delphi/query": {
      "post": {
        "tags": ["delphi"],
        "summary": "Query",
        "description": "Query",
        "operationId": "query",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "string"
                  },
                  "fields": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filters": {
                    "type": "object"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["cube"]
                  },
                  "notes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "cubes": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CubeCube"
                    }
                  }
                },
                "required": ["input", "fields"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "query": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delphi/search-entities": {
      "post": {
        "tags": ["delphi"],
        "summary": "Search entities",
        "description": "Search entities",
        "operationId": "searchEntities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",

                    "enum": ["cube"]
                  },
                  "defaultEntities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": ["question"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search entities",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "relevantEntities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delphi/validated-query": {
      "post": {
        "tags": ["delphi"],
        "summary": "Validate query",
        "description": "Validate query",
        "operationId": "validateQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["cube"]
                  },
                  "query": {
                    "type": "object"
                  },
                  "validatedBy": {
                    "type": "string"
                  },
                  "askedBy": {
                    "type": "string"
                  }
                },
                "required": ["question", "type", "query"]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Validate query"
          }
        }
      }
    },
    "/folders": {
      "get": {
        "tags": ["delphi"],
        "summary": "Get folders",
        "description": "Get folders",
        "operationId": "getFolders",
        "parameters": [
          {
            "name": "parentFolderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeAll",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get folders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "parentFolderId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["delphi"],
        "summary": "Create folder",
        "description": "Create folder",
        "operationId": "createFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "parentFolderId": {
                        "type": "string"
                      }
                    },
                    "required": ["title", "description"]
                  }
                },
                "required": ["folder"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create folder",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/query/cube": {
      "post": {
        "tags": ["delphi"],
        "summary": "Query cube",
        "description": "Query cube",
        "operationId": "queryCube",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object"
                  }
                },
                "required": ["query"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/saved-queries": {
      "get": {
        "tags": ["delphi"],
        "summary": "Get saved queries",
        "description": "Get saved queries",
        "operationId": "getSavedQueries",
        "parameters": [
          {
            "name": "folderId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get saved queries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    },
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "query": {
                            "type": "object"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "folderId": {
                            "type": "string"
                          },
                          "createdById": {
                            "type": "string"
                          },
                          "connectionId": {
                            "type": "string"
                          },
                          "order": {
                            "type": "number"
                          },
                          "width": {
                            "type": "number"
                          },
                          "height": {
                            "type": "number"
                          },
                          "x": {
                            "type": "number"
                          },
                          "y": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["delphi"],
        "summary": "Create saved query",
        "description": "Create saved query",
        "operationId": "createSavedQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "folderId": {
                    "type": "string"
                  },
                  "savedQuery": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "connectionType": {
                        "type": "string",
                        "enum": ["cube"]
                      },
                      "chartType": {
                        "type": "string",
                        "enum": [
                          "area",
                          "bar",
                          "bar_list",
                          "donut",
                          "line",
                          "scatter",
                          "table"
                        ]
                      },
                      "dimensions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dateRange": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "string"
                          },
                          "to": {
                            "type": "string"
                          },
                          "selectValue": {
                            "type": "string"
                          }
                        }
                      },
                      "dateFilterField": {
                        "type": "string"
                      },
                      "index": {
                        "type": "string"
                      },
                      "pivot": {
                        "type": "string"
                      },
                      "stacked": {
                        "type": "boolean"
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "limit": {
                        "type": "number"
                      },
                      "orderBy": {
                        "type": "object"
                      },
                      "timeGranularity": {
                        "type": "string",
                        "enum": [
                          "second",
                          "day",
                          "hour",
                          "minute",
                          "month",
                          "quarter",
                          "second",
                          "week",
                          "year"
                        ]
                      },
                      "order": {
                        "type": "number"
                      },
                      "width": {
                        "type": "number"
                      },
                      "height": {
                        "type": "number"
                      },
                      "x": {
                        "type": "number"
                      },
                      "y": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "title",
                      "description",
                      "connectionType",
                      "chartType",
                      "dimensions",
                      "metrics",
                      "index"
                    ]
                  }
                },
                "required": ["savedQuery"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create saved query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["delphi"],
        "summary": "Delete saved query",
        "description": "Delete saved query",
        "operationId": "deleteSavedQuery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete saved query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["ok"]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delphi/workflow": {
      "post": {
        "tags": ["delphi"],
        "summary": "Chat Workflow",
        "description": "Chat Workflow",
        "operationId": "chatWorkflow",
        "security": [
          {
            "clientId": [],
            "publicToken": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "conversation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "author": {
                          "type": "string",
                          "enum": ["delphi", "user", "function"]
                        },
                        "text": {
                          "type": "string"
                        }
                      },
                      "required": ["author", "text"]
                    },

                    "data": {
                      "type": "object"
                    },
                    "colors": {
                      "type": "object",
                      "properties": {
                        "primary": {
                          "type": "string"
                        },
                        "secondary": {
                          "type": "string"
                        }
                      }
                    },
                    "conversationId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Workflow",
            "content": {
              "application/json-seq": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "conversationId": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    { "$ref": "#/components/schemas/CoordinatorResponse" }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}
